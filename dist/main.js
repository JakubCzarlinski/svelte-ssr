// @bun
import XV from"command-line-args";import{chdir as YV,cwd as ZV}from"process";import{copyFileSync as MV,existsSync as g,mkdirSync as z,readdirSync as NV,rmdirSync as AV,writeFile as j}from"fs";import{cwd as BV}from"process";import S from"path";import r from"@fullhuman/postcss-purgecss";import d from"@rollup/plugin-node-resolve";import{svelte as p,vitePreprocess as h}from"@sveltejs/vite-plugin-svelte";import n from"autoprefixer";import{readFileSync as l,writeFileSync as i}from"fs";import Y from"path";import{preprocess as a}from"svelte/compiler";import{render as o}from"svelte/server";import t from"tailwindcss";import{defineConfig as e}from"vite";import{parse as _}from"@/node_modules/svelte/src/compiler/phases/1-parse/index.js";import{remove_typescript_nodes as Z}from"@/node_modules/svelte/src/compiler/phases/1-parse/remove_typescript_nodes.js";import{analyze_component as E}from"@/node_modules/svelte/src/compiler/phases/2-analyze/index.js";import{transform_component as w}from"@/node_modules/svelte/src/compiler/phases/3-transform/index.js";import{reset as C,reset_warning_filter as y}from"@/node_modules/svelte/src/compiler/state.js";import{validate_component_options as x}from"@/node_modules/svelte/src/compiler/validate-options.js";import{walk as u}from"estree-walker";import Q from"path";import{walk as F}from"zimmerframe";function O(I,J,V,G){y(J.warningFilter);const M=x(J,"");C(I,M);let H=_(I);const{customElement:A,...N}=H.options||{},B={...M,...N,customElementOptions:A};if(H=f(H,V,G),H.metadata.ts)H={...H,fragment:H.fragment&&Z(H.fragment),instance:H.instance&&Z(H.instance),module:H.module&&Z(H.module)};const q=E(H,I,B),L=w(q,I,B);return L.ast=v(H),L}function v(I){const J=(V)=>{delete V.metadata,delete V.parent};return I.options?.attributes.forEach((V)=>{if(J(V),J(V.value),Array.isArray(V.value))V.value.forEach(J)}),F(I,null,{_(V,{next:G}){J(V),G()}})}function f(I,J,V){return u(I,{enter(G,M){if(G.type==="ImportDeclaration"){if(!G.source.value||!G.source.raw)return;if(G.source.value.match($))G.source.value=G.source.value.replace($,(A,N,B)=>{return X(N,J,"js",V)}),G.source.raw=G.source.raw.replace($,(A,N,B)=>{return X(N,J,"js",V)}),G.source.value=G.source.value.replace(D,(A,N,B)=>{return X(N,J,B,V)}),G.source.raw=G.source.raw.replace(D,(A,N,B)=>{return X(N,J,B,V)});else{const A=import.meta.require.resolve(G.source.value,{paths:[Q.dirname(J)]}),N=Q.relative(Q.dirname(J),A).replaceAll(Q.sep,Q.posix.sep);G.source.value=`../${N}`,G.source.raw=`"../${N}"`}}}})}function X(I,J,V,G){return`./${Q.relative(Q.dirname(J),Q.join(I)).replaceAll(Q.sep,Q.posix.sep).replaceAll(G,"")}.${V}`}var $=/@\/([a-zA-Z0-9_\/]+)\.(svelte)(?!\.)/g,D=/@\/([a-zA-Z0-9_\/]+)\.(mjs|cjs|js)/g;function c(I){return I.replaceAll(P,(J,V,G)=>G)}function s(I){return I.replaceAll(m,(J,V,G)=>G)}function W(){return{markup({content:I}){return{code:c(s(I))}}}}var m=/<!--\s+CSR\s+-->([\s\S]*?)<!--\s+SSR\s+-->([\s\S]*?)<!--\s+END\s+-->/gm,P=/\/\/\s+CSR\s*([\s\S]*?)\/\/\s+SSR\s*([\s\S]*?)\/\/\s+END/gm;function GV(I){if(K)return K;else if(I)return R(I);else throw new Error("Preprocessor config not set")}function R(I){return K=[W(),h({style:e({plugins:[VV,r({})],css:{postcss:{plugins:[t(I),n()]}},resolve:{alias:{"@":Y.resolve(__dirname,"./")}},build:{commonjsOptions:{include:[/linked-dep/,/node_modules/]},ssr:!0,rollupOptions:{input:"./index.html",output:{entryFileNames:"assets/[name].js",chunkFileNames:"assets/[name].js",assetFileNames:"assets/[name].[ext]"},plugins:[d({browser:!0,exportConditions:["svelte"],extensions:[".svelte"]})]}}})})]}async function b(I,J,V,G,M){let H=l(I,"utf8");if(V){const q=H.match(IV),L=`<link rel="modulepreload" as="script" href="/assets/${Y.basename(J)}"/>`;if(q)H=H.replace(q[0],`${q[0]}\n${L}`);else H=H.concat(`<svelte:head>${L}</svelte:head>`)}const A=Y.basename(I),{code:N}=await a(H,GV(),{filename:A}),{js:B}=O(N,{filename:A,generate:"ssr",dev:!1,discloseVersion:!1,modernAst:!0},J.replace(G,""),M);return new Promise((q)=>{i(J,B.code),q(!0)})}async function k(I){const J=(await import(Y.join(process.cwd(),I))).default,V=o(J,{});V.head=V.head.replaceAll(HV,"");const G=new Set;let M;while(M=JV.exec(V.head))G.add(M[0]);return V.head=Array.from(G).join("\n"),V}var __dirname="C:\\Users\\Jakub\\Documents\\GitHub\\svelte-ssr\\rendering",VV=p({compilerOptions:{modernAst:!0},prebundleSvelteLibraries:!0}),K=null,IV=/<svelte:head>([\s\S]*?)<\/svelte:head>/,JV=/<[^>]+>/g,HV=/<!--[\s\S]*?-->/g;async function T({componentPath:I,compilePath:J,tailwindConfig:V,clean:G}){const M=new Promise((q)=>{import(S.join(BV(),V)).then((L)=>{q(L.default)})});if(!g(J))z(J,{recursive:!0});else if(G)AV(J,{recursive:!0}),z(J,{recursive:!0});const H=NV(I,{recursive:!0,withFileTypes:!0}),A=UV(H,I),N=[],B=[];for(let q of A){const L=S.dirname(q);if(L!=="."){const U=S.join(J,L);if(!g(U))z(U,{recursive:!0})}if(q.endsWith(".svelte")){N.push(q);continue}B.push(new Promise((U)=>{MV(`${I}${q}`,`${J}${q}`),U(!0)}))}await Promise.all(B),R(await M),await SV(N,I,J),await LV(N,J)}function LV(I,J){const V=[];for(let G=0;G<I.length;G++){const M=J+I[G].split(".")[0];V.push(k(M+".js").then(async(H)=>{await QV(H,M)}))}return Promise.all(V)}function QV(I,J){let V=0;const G=(M)=>{if(V++,V===2)return M(!0)};return new Promise((M)=>{j(J+".html",I.html,()=>G(M)),j(J+".head",I.head,()=>G(M))})}function SV(I,J,V){const G=[];for(let M=0;M<I.length;M++){const H=I[M],A=H.split(".")[0],N=J+H,B=V+A+".js";G.push(b(N,B,!0,V,J.slice(2)))}return Promise.all(G)}function UV(I,J){let V="",G="",M="";const H=[];for(let A=0;A<I.length;A++){const N=I[A];if(!N.isFile())continue;for(let B of qV){if(!N.name.endsWith(B))continue;if(G=N.parentPath.replaceAll(S.sep,S.posix.sep).replaceAll(J.slice(2,-1),""),V=N.name.replaceAll(S.sep,S.posix.sep),V.startsWith("/"))V=V.slice(1);if(M=S.join(G,V).replaceAll(S.sep,S.posix.sep),M.startsWith("/"))M=M.slice(1);H.push(M);break}}return H}var qV=[".svelte",".js",".cjs",".mjs",".css",".html",".json"];var $V=[{name:"componentPath",type:String,alias:"i",defaultValue:"./src/lib/"},{name:"compilePath",type:String,alias:"o",defaultValue:"./compile/"},{name:"tailwindConfig",type:String,alias:"t",defaultValue:"tailwind.config.ts"},{name:"clean",type:Boolean,alias:"c",defaultValue:!1}],KV=XV($V);YV(ZV());T(KV);
