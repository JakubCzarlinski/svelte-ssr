// @bun
import l from"command-line-args";import{chdir as o,cwd as r}from"process";import{copyFileSync as P,existsSync as L,mkdirSync as _,readdirSync as d,rmdirSync as p,writeFile as A}from"fs";import{cwd as c}from"process";import K from"path";import{compileSvelte as O}from"@/rendering/compile.ts";import{removeCSR as W}from"@/rendering/filter.ts";import R from"@fullhuman/postcss-purgecss";import k from"@rollup/plugin-node-resolve";import{svelte as E,vitePreprocess as j}from"@sveltejs/vite-plugin-svelte";import w from"autoprefixer";import{readFileSync as T,writeFile as x}from"fs";import X from"path";import{preprocess as y}from"svelte/compiler";import{render as S}from"svelte/server";import u from"tailwindcss";import{defineConfig as C}from"vite";function g(b){if(Y)return Y;else if(b)return Z(b);else throw new Error("Preprocessor config not set")}function Z(b){return Y=[W(),j({style:C({plugins:[F,R({})],css:{postcss:{plugins:[u(b),w()]}},resolve:{alias:{"@":X.resolve(__dirname,"./")}},build:{commonjsOptions:{include:[/linked-dep/,/node_modules/]},ssr:!0,rollupOptions:{input:"./index.html",output:{entryFileNames:"assets/[name].js",chunkFileNames:"assets/[name].js",assetFileNames:"assets/[name].[ext]"},plugins:[k({browser:!0,exportConditions:["svelte"],extensions:[".svelte"]})]}}})})]}async function $(b,M,B,q){let V=T(b,"utf8");if(B){const I=V.match(v),J=`<link rel="modulepreload" as="script" href="/assets/${X.basename(M)}"/>`;if(I)V=V.replace(I[0],`${I[0]}\n${J}`);else V=V.concat(`<svelte:head>${J}</svelte:head>`)}const z=X.basename(b),{code:N}=await y(V,g(),{filename:z}),{js:G}=O(N,{filename:z,generate:"ssr",dev:!1,discloseVersion:!1,modernAst:!0},M.replace(q,""));await x(M,G.code,()=>{})}async function H(b){const M=(await import(X.join(process.cwd(),b))).default,B=S(M,{});B.head=B.head.replaceAll(m,"");const q=new Set;let V;while(V=f.exec(B.head))q.add(V[0]);return B.head=Array.from(q).join("\n"),B}var __dirname="C:\\Users\\Jakub\\Documents\\GitHub\\svelte-ssr\\rendering",F=E({compilerOptions:{modernAst:!0},prebundleSvelteLibraries:!0}),Y=null,v=/<svelte:head>([\s\S]*?)<\/svelte:head>/,f=/<[^>]+>/g,m=/<!--[\s\S]*?-->/g;async function D({componentPath:b,compilePath:M,tailwindConfig:B,clean:q}){const V=new Promise((J)=>{import(K.join(c(),B)).then((Q)=>{J(Q.default)})});if(!L(M))_(M,{recursive:!0});else if(q)p(M,{recursive:!0}),_(M,{recursive:!0});const z=d(b,{recursive:!0,withFileTypes:!0}),N=s(z,b),G=[],I=[];for(let J of N){const Q=K.dirname(J);if(Q!=="."){const U=K.join(M,Q);if(!L(U))_(U,{recursive:!0})}if(J.endsWith(".svelte")){G.push(J);continue}I.push(new Promise((U)=>{P(`${b}${J}`,`${M}${J}`),U(!0)}))}await Promise.all(I),Z(await V),await a(G,b,M),await n(G,M)}function n(b,M){const B=[];for(let q=0;q<b.length;q++){const V=M+b[q].split(".")[0];B.push(H(V+".js").then((z)=>{A(V+".html",z.html,()=>{}),A(V+".head",z.head,()=>{})}))}return Promise.all(B)}function a(b,M,B){const q=[];for(let V=0;V<b.length;V++){const z=b[V],N=z.split(".")[0],G=M+z,I=B+N+".js";q.push($(G,I,!0,B))}return Promise.all(q)}function s(b,M){let B="",q="",V="";const z=[];for(let N=0;N<b.length;N++){const G=b[N];if(!G.isFile())continue;for(let I of h){if(!G.name.endsWith(I))continue;if(q=G.parentPath.replaceAll(K.sep,K.posix.sep).replaceAll(M.slice(2,-1),""),B=G.name.replaceAll(K.sep,K.posix.sep),B.startsWith("/"))B=B.slice(1);if(V=K.join(q,B).replaceAll(K.sep,K.posix.sep),V.startsWith("/"))V=V.slice(1);z.push(V);break}}return z}var h=[".svelte",".js",".cjs",".mjs",".css",".html",".json"];var t=[{name:"componentPath",type:String,alias:"i",defaultValue:"./src/lib/"},{name:"compilePath",type:String,alias:"o",defaultValue:"./compile/"},{name:"tailwindConfig",type:String,alias:"t",defaultValue:"tailwind.config.ts"},{name:"clean",type:Boolean,alias:"c",defaultValue:!1}],i=l(t);o(r());D(i);
